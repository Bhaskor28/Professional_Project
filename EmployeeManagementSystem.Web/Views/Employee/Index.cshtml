@using EmployeeManagementSystem.Application.Common.PaginatedList
@model PaginatedList<EmployeeManagementSystem.Application.Employees.EmployeeVM>
@{
    ViewData["Title"] = "Employees";
}


<div class="container-fluid px-4 mt-4">
    <h2 class="mb-4">Employee Management</h2>

    <!-- Top Action Bar -->
    <div class="d-flex justify-content-between mb-3">
        <div>
            <a asp-controller="Employee" asp-action="AddEmployee" class="btn btn-primary me-2">
                <i class="bi bi-plus-lg"></i> Add Employee
            </a>

            <button class="btn btn-success"><i class="bi bi-file-earmark-excel"></i> Export</button>
        </div>
        <form method="post">
            <div class="d-flex">
                <input type="text" class="form-control me-2" name="searchString" placeholder="Search by name..." />
                <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i></button>
            </div>
        </form>
    </div>

    <!-- Employee Table -->

    <div class="card shadow-sm">
        <div class="card-body">

            <div class="justify-content-between" >
                <a class="text-dark" asp-controller="Employee" asp-action="Index" asp-route-sortOrder ="nameDesc">Descending By Name</a>
            </div>
            <table class="table table-bordered table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>#Id</th>
                        <th>FirstName</th>
                        <th>Date of Birth</th>
                        <th>Gender</th>
                        <th>Email</th>
                        <th>Phone Number</th>
                        <th>Department</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Example row -->
                    @foreach(var emp in Model.Items)
                    {
                        <tr>
                            <td>@emp.Id</td>
                            <td>@emp.FirstName</td>
                            <td>@emp.DateOfBirth</td>
                            <td>@emp.Gender</td>
                            <td>@emp.Email</td>
                            <td>@emp.PhoneNumber</td>
                            <td>@emp.DepartmentId</td>
                            <td><span class="badge bg-success">@emp.IsActive</span></td>
                            <td>
                                <button class="btn btn-sm btn-info"><i class="bi bi-eye"></i></button>
                                <button class="btn btn-sm btn-warning"><i class="bi bi-pencil"></i></button>
                                <button class="btn btn-sm btn-danger"><i class="bi bi-trash"></i></button>
                            </td>
                        </tr>

                    }

                    <!-- You can use a foreach loop here for real data -->
                </tbody>
            </table>
            @*paging*@

        </div>

    </div>
    <div class="row mt-5">
        <div class="col-md-6">
        </div>
        <div class="col-md-6">
            <nav>
                <ul class="pagination justify-content-end">
                    <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                        <a class="page-link text-black" asp-route-pageNumber="1">
                        <span>First</span>
                        </a>
                    </li>
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex-1)">
                        <span>Previous</span>
                        </a>
                    </li>
                    @{
                        int startPage = Math.Max(Model.PageIndex - 2, 1);
                        int endPage = Math.Min(Model.PageIndex + 2, Model.TotalPages);

                        for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                <a class="page-link text-black" asp-route-pageNumber="@i">@i</a>
                            </li>
                        }
                    }

                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex+1)">
                            <span>Next</span>
                        </a>
                    </li>
                    <li class="page-item @(Model.PageIndex==Model.TotalPages? "disabled" : "")">
                        <a class="page-link text-black" asp-route-pageNumber="@Model.TotalPages">
                            <span>Last</span>
                        </a>
                    </li>
                </ul>

            </nav>
        </div>
    </div>
</div>
